# use the official Bun image
# see all versions at https://hub.docker.com/r/oven/bun/tags
FROM oven/bun:latest AS base
WORKDIR /usr/src/app

# install dependencies into temp directory
# this will cache them and speed up future builds
FROM base AS install
RUN mkdir -p /temp/dev
COPY package.json bun.lockb /temp/dev/
RUN cd /temp/dev && bun install --frozen-lockfile

# install with --production (exclude devDependencies)
RUN mkdir -p /temp/prod
COPY package.json bun.lockb /temp/prod/
RUN cd /temp/prod && bun install --frozen-lockfile --production

# copy node_modules from temp directory
# then copy all (non-ignored) project files into the image
FROM base AS prerelease
COPY --from=install /temp/dev/node_modules node_modules
COPY bun.lockb package.json tsconfig.json ./
COPY orchestrator ./

# Set environment variables for RabbitMQ and Telegram bot
# These are defaults; they should be overridden by Docker Compose or directly in the Docker run command
ENV RABBITMQ_HOST=amqp://localhost
ENV TICKER_REQUEST_QUEUE=ticker_requests
ENV TICKER_RESPONSE_QUEUE=ticker_responses
ENV NOTIFICATION_QUEUE=indicator_notifications

# copy production dependencies and source code into final image
FROM base AS release
COPY --from=install /temp/prod/node_modules node_modules
COPY --from=prerelease /usr/src/app/orchestrator.ts /usr/src/app/config.ts /usr/src/app/types.ts ./
COPY --from=prerelease /usr/src/app/package.json .
COPY --from=prerelease /usr/src/app/amqp ./amqp
COPY --from=prerelease /usr/src/app/db ./db

# run the app
USER bun
ENTRYPOINT [ "bun", "run", "orchestrator.ts" ]